在没有锁的时候，在ph.c的put函数中，首先去查看是否是key，然后去插入，有可能多个线程同时走for循环，多个线程发现没有key，就去哈希桶中插入，
向插入函数insert传入了table[i]的地址，假设两个线程a和b，a通过语句*p = e将table[i]链指向了自己创建的entry，b通过语句*p = e将table[i]链指向了自己创建的entry，
也就是b将a覆盖掉了，这样a丢失了，同理a也会覆盖b，这样最后的结果是有一定量的key丢失了，丢失的key在一次测试中是固定的，
而a和b线程最后都是去遍历全量的key来找到丢失数量，所以算出来丢失的数量是一样的。