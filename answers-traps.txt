1.哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？
在main对printf的调用中，a0寄存器保存字符串参数fmt在内存中的地址，a1寄存器保存f(8)+1的结果，a2寄存器保存13

2.main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）
汇编代码对函数f的调用已经被函数内联了，在编译器就把结果计算出来了，对g的调用已经被函数内联了，在编译器就把结果计算出来了

3.printf函数位于哪个地址？
由call.asm中的jalr	1536(ra) # 630 <printf>可知，再经过调试，发现printf函数在0x630处

4.在main中printf的jalr之后的寄存器ra中有什么值？
命令是jalr	1536(ra)，由于jalr的默认rd为ra，所以jalr之后ra的值为main函数中jalr后面的指令的地址，也就是exit(0)语句的地址

5.运行以下代码unsigned int i = 0x00646c72; printf("H%x Wo%s", 57616, &i);程序的输出是什么？
程序输出HE110 World，就是将57616格式化成十六进制输出，将i以字符串形式输出

输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？
为了得到相同输出，需要将i设置为0x726c6400，由于57616是以十六进制输出，不需要更改。

6.在下面的代码中printf("x=%d y=%d", 3);，“y=”之后将打印什么(注：答案不是一个特定的值）？为什么会发生这种情况？
原本需要传递两个格式化实参，现在传递了一个3，但是在printf函数中，程序仍然去a2寄存器寻找第二个格式化的实参，因此y=之后打印出什么，取决于a2寄存器此时存储的是什么